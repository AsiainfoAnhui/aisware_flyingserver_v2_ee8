<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="node1" ignored="0" name="Surefire test" tests="43" failures="0" timestamp="2023-07-17T09:55:29 CST" time="402.992" errors="0" skipped="10">
  <testcase name="optional_spec104_mustSignalOnErrorWhenFails" time="0.006" classname="org.reactivestreams.tck.PublisherVerification">
    <skipped/>
  </testcase> <!-- optional_spec104_mustSignalOnErrorWhenFails -->
  <testcase name="optional_spec105_emptyStreamMustTerminateBySignallingOnComplete" time="6.149" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="optional_spec111_maySupportMultiSubscribe" time="5.115" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="optional_spec111_multicast_mustProduceTheSameElementsInTheSameSequenceToAllOfItsSubscribersWhenRequestingManyUpfront" time="0.099" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="optional_spec111_multicast_mustProduceTheSameElementsInTheSameSequenceToAllOfItsSubscribersWhenRequestingManyUpfrontAndCompleteAsExpected" time="0.131" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="optional_spec111_multicast_mustProduceTheSameElementsInTheSameSequenceToAllOfItsSubscribersWhenRequestingOneByOne" time="0.101" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="optional_spec111_registeredSubscribersMustReceiveOnNextOrOnCompleteSignals" time="5.056" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="optional_spec309_requestNegativeNumberMaySignalIllegalArgumentExceptionWithSpecificMessage" time="5.057" classname="org.reactivestreams.tck.PublisherVerification">
    <skipped/>
  </testcase> <!-- optional_spec309_requestNegativeNumberMaySignalIllegalArgumentExceptionWithSpecificMessage -->
  <testcase name="required_createPublisher1MustProduceAStreamOfExactly1Element" time="0.087" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_createPublisher3MustProduceAStreamOfExactly3Elements" time="0.063" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec101_subscriptionRequestMustResultInTheCorrectNumberOfProducedElements" time="15.091" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec102_maySignalLessThanRequestedAndTerminateSubscription" time="0.122" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec105_mustSignalOnCompleteWhenFiniteStreamTerminates" time="5.278" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec107_mustNotEmitFurtherSignalsOnceOnCompleteHasBeenSignalled" time="5.059" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec109_mayRejectCallsToSubscribeIfPublisherIsUnableOrUnwillingToServeThemRejectionMustTriggerOnErrorAfterOnSubscribe" time="0.001" classname="org.reactivestreams.tck.PublisherVerification">
    <skipped/>
  </testcase> <!-- required_spec109_mayRejectCallsToSubscribeIfPublisherIsUnableOrUnwillingToServeThemRejectionMustTriggerOnErrorAfterOnSubscribe -->
  <testcase name="required_spec109_mustIssueOnSubscribeForNonNullSubscriber" time="0.054" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec109_subscribeThrowNPEOnNullSubscriber" time="0.064" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec302_mustAllowSynchronousRequestCallsFromOnNextAndOnSubscribe" time="5.054" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec303_mustNotAllowUnboundedRecursion" time="0.074" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec306_afterSubscriptionIsCancelledRequestMustBeNops" time="5.058" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec307_afterSubscriptionIsCancelledAdditionalCancelationsMustBeNops" time="5.045" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec309_requestNegativeNumberMustSignalIllegalArgumentException" time="5.049" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec309_requestZeroMustSignalIllegalArgumentException" time="5.049" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec312_cancelMustMakeThePublisherToEventuallyStopSignaling" time="10.061" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec313_cancelMustMakeThePublisherEventuallyDropAllReferencesToTheSubscriber" time="0.5" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec317_mustNotSignalOnErrorWhenPendingAboveLongMaxValue" time="5.073" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec317_mustSupportACumulativePendingElementCountUpToLongMaxValue" time="0.037" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_spec317_mustSupportAPendingElementCountUpToLongMaxValue" time="0.051" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_validate_boundedDepthOfOnNextAndRequestRecursion" time="0.0" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="required_validate_maxElementsFromPublisher" time="0.001" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="stochastic_spec103_mustSignalOnMethodsSequentially" time="4.926" classname="org.reactivestreams.tck.PublisherVerification"/>
  <testcase name="untested_spec106_mustConsiderSubscriptionCancelledAfterOnErrorOrOnCompleteHasBeenCalled" time="0.001" classname="org.reactivestreams.tck.PublisherVerification">
    <skipped/>
  </testcase> <!-- untested_spec106_mustConsiderSubscriptionCancelledAfterOnErrorOrOnCompleteHasBeenCalled -->
  <testcase name="untested_spec107_mustNotEmitFurtherSignalsOnceOnErrorHasBeenSignalled" time="0.001" classname="org.reactivestreams.tck.PublisherVerification">
    <skipped/>
  </testcase> <!-- untested_spec107_mustNotEmitFurtherSignalsOnceOnErrorHasBeenSignalled -->
  <testcase name="untested_spec108_possiblyCanceledSubscriptionShouldNotReceiveOnErrorOrOnCompleteSignals" time="0.0" classname="org.reactivestreams.tck.PublisherVerification">
    <skipped/>
  </testcase> <!-- untested_spec108_possiblyCanceledSubscriptionShouldNotReceiveOnErrorOrOnCompleteSignals -->
  <testcase name="untested_spec109_subscribeShouldNotThrowNonFatalThrowable" time="0.0" classname="org.reactivestreams.tck.PublisherVerification">
    <skipped/>
  </testcase> <!-- untested_spec109_subscribeShouldNotThrowNonFatalThrowable -->
  <testcase name="untested_spec110_rejectASubscriptionRequestIfTheSameSubscriberSubscribesTwice" time="0.0" classname="org.reactivestreams.tck.PublisherVerification">
    <skipped/>
  </testcase> <!-- untested_spec110_rejectASubscriptionRequestIfTheSameSubscriberSubscribesTwice -->
  <testcase name="untested_spec304_requestShouldNotPerformHeavyComputations" time="0.0" classname="org.reactivestreams.tck.PublisherVerification">
    <skipped/>
  </testcase> <!-- untested_spec304_requestShouldNotPerformHeavyComputations -->
  <testcase name="untested_spec305_cancelMustNotSynchronouslyPerformHeavyComputation" time="0.001" classname="org.reactivestreams.tck.PublisherVerification">
    <skipped/>
  </testcase> <!-- untested_spec305_cancelMustNotSynchronouslyPerformHeavyComputation -->
  <testcase name="testInvalidPortNumber" time="1.364" classname="org.eclipse.microprofile.rest.client.tck.ProxyServerTest"/>
  <testcase name="testInvalidPortNumber1" time="0.047" classname="org.eclipse.microprofile.rest.client.tck.ProxyServerTest"/>
  <testcase name="testInvalidPortNumber2" time="0.068" classname="org.eclipse.microprofile.rest.client.tck.ProxyServerTest"/>
  <testcase name="testNullHostName" time="0.035" classname="org.eclipse.microprofile.rest.client.tck.ProxyServerTest"/>
  <testcase name="testProxy" time="1.31" classname="org.eclipse.microprofile.rest.client.tck.ProxyServerTest"/>
</testsuite>
